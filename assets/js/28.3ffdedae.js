(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{312:function(e,a,t){e.exports=t.p+"assets/img/ASDipslayNode.fe81827e.png"},313:function(e,a,t){e.exports=t.p+"assets/img/ASRangeTuningParameters.3aeb591d.png"},362:function(e,a,t){"use strict";t.r(a);var i=[function(){var e=this,a=e.$createElement,i=e._self._c||a;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"texture-基本概念"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#texture-基本概念","aria-hidden":"true"}},[e._v("#")]),e._v(" Texture - 基本概念")]),e._v(" "),i("p",[e._v("Texture 基本单位为 "),i("code",[e._v("node")]),e._v(" ， "),i("code",[e._v("ASDisplayNode")]),e._v(" 是建立在 "),i("code",[e._v("UIView")]),e._v(" 上的抽象层，如同 "),i("code",[e._v("UIView")]),e._v("与 "),i("code",[e._v("CALayer")]),e._v(" 的关系。"),i("code",[e._v("ASDiplayNode")]),e._v(" 是线程安全的，你可以在后台线程进行初始化和配置。")]),e._v(" "),i("h2",{attrs:{id:"nodes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#nodes","aria-hidden":"true"}},[e._v("#")]),e._v(" Nodes")]),e._v(" "),i("p",[i("code",[e._v("Node")]),e._v(" 的用法跟 "),i("code",[e._v("UIView")]),e._v(" 类似，且 "),i("code",[e._v("Node")]),e._v(" 提供了 "),i("code",[e._v("UIView")]),e._v(" 和 "),i("code",[e._v("CALayer")]),e._v(" 属性。\nTexture 提供了丰富的 Node 子类 ，用于取代 UIKit 组建。")]),e._v(" "),i("ul",[i("li",[e._v("ASDipslayNode -> UIView")]),e._v(" "),i("li",[e._v("ASCellNode -> UITableViewCell/UICollectionViewCell")]),e._v(" "),i("li",[e._v("ASScrollNode -> UIScrollView")]),e._v(" "),i("li",[e._v("ASEditableTextNode -> UITextView")]),e._v(" "),i("li",[e._v("ASTextNode, ASTextNode2 -> UILabel")]),e._v(" "),i("li",[e._v("ASImageNode, ASNetworkImageNode, ASMultiplexImageNode -> UIImageView")]),e._v(" "),i("li",[e._v("ASVideoNode -> AVPlayerLayer")]),e._v(" "),i("li",[e._v("ASVideoPlayerNode -> UIMoviePlayer")]),e._v(" "),i("li",[e._v("ASControlNode -> UIControl")]),e._v(" "),i("li",[e._v("ASButtonNode -> UIButton")]),e._v(" "),i("li",[e._v("ASMapNode -> MKMapView")])]),e._v(" "),i("p",[e._v("ASDipslayNode示意图:")]),e._v(" "),i("p",[i("img",{attrs:{src:t(312),alt:"ASDipslayNode"}})]),e._v(" "),i("h2",{attrs:{id:"node-containers"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#node-containers","aria-hidden":"true"}},[e._v("#")]),e._v(" Node Containers")]),e._v(" "),i("p",[e._v("推荐使用 Node Container 来包含 Nodes，Texture 提供以下 Node Containers：")]),e._v(" "),i("ul",[i("li",[e._v("ASCollectionNode -> UICollectionView")]),e._v(" "),i("li",[e._v("ASPagerNode -> UIPageViewController")]),e._v(" "),i("li",[e._v("ASTableNode -> UITableView")]),e._v(" "),i("li",[e._v("ASViewController -> UIViewController")]),e._v(" "),i("li",[e._v("ASNavigationController -> UINavigationController")]),e._v(" "),i("li",[e._v("ASTabBarController -> UITabBarController")])]),e._v(" "),i("p",[e._v("Node Containers 好处都有啥？\n智能预加载。这意味所有 Node 相关的布局计算，数据获取，解码和渲染都可以异步完成。")]),e._v(" "),i("h2",{attrs:{id:"subclassing"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#subclassing","aria-hidden":"true"}},[e._v("#")]),e._v(" Subclassing")]),e._v(" "),i("p",[i("strong",[e._v("ASDisplayNode")])]),e._v(" "),i("ul",[i("li",[i("p",[i("code",[e._v("-init")]),e._v("\nASDisplayNode 的 -init 方法可以在后台线程中调用，所以不要在该方法中获取或者初始化任何 UIKit 的相关对象，例如 添加手势。")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("-didLoad")]),e._v("\n该方法跟 UIViewController "),i("code",[e._v("-viewDidLoad")]),e._v(" 方法类似，当后台 View 加载完成时就会调用，且只会在主线程中调用，用于进行与 UIKit 相关的操作")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("-layoutSpecThatFits:")]),e._v("\n用于生成 "),i("code",[e._v("ASLayoutSpec")]),e._v(" 对象，在后台线程中运行，而 "),i("code",[e._v("ASLayoutSpec")]),e._v(" 则包含了 Node 的大小 以及所有 subnodes 的位置及大小。除非你明确知道你正在做什么，否则不要在该方法中创建 Node")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("-layout")]),e._v(" "),i("code",[e._v("-layout")]),e._v(" 与 UIViewController "),i("code",[e._v("-viewWillLayoutSubviews")]),e._v(" 类似。可以设置 view 的一些不需要进行布局的基础属性。如果在 Node 使用了 UIView，则可以在该方法中设置 frame 。\n该方法在主线程中调用，但是如果你正在使用 ASLayoutSpec ，则不应该太过依赖该方法。\n一个很好的用法是你想要设置 subnode 为确切的 size ，则可以在 "),i("code",[e._v("-layout")]),e._v(" 中直接设置。")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("subnode.frame = self.bounds;\n")])])])])]),e._v(" "),i("p",[i("strong",[e._v("ASViewController")])]),e._v(" "),i("ul",[i("li",[i("code",[e._v("-init")]),e._v("\n该方法中不要过早访问 "),i("code",[e._v("self.view")]),e._v(" 或者 "),i("code",[e._v("self.node.view")]),e._v(" ，这会强制 view 提早生成。\nASViewController 的指定初始化方法是 "),i("code",[e._v("-initWithNode:")])]),e._v(" "),i("li",[i("code",[e._v("-loadView")]),e._v("\n不建议使用该方法")]),e._v(" "),i("li",[i("code",[e._v("-viewDidLoad")]),e._v("\n用法与 UIViewController 的类似")]),e._v(" "),i("li",[i("code",[e._v("-viewWillLayoutSubviews")]),e._v("\n用于进行布局计算。")])]),e._v(" "),i("h2",{attrs:{id:"智能预加载"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#智能预加载","aria-hidden":"true"}},[e._v("#")]),e._v(" 智能预加载")]),e._v(" "),i("p",[e._v("Node 的能力是异步并行地进行渲染和计算，与此同样要的是智能预加载\nNode 对于它们当前的界面状态都有标志来说明。\n"),i("code",[e._v("interfaceState")]),e._v(" 属性由创建和维护 containers 的 "),i("code",[e._v("ASRangeController")]),e._v(" 负责更新。")]),e._v(" "),i("p",[i("strong",[e._v("Interface State Ranges")])]),e._v(" "),i("p",[e._v("![](../images/Interface State Ranges.png)")]),e._v(" "),i("p",[e._v("当 scrollView 滚动时，scrollView 中的 node 就会更新至对应状态")]),e._v(" "),i("ul",[i("li",[e._v("Preload: 距离屏幕较远，准备所需要的数据")]),e._v(" "),i("li",[e._v("Display：即将进入屏幕，文字渲染，图片解码渲染等")]),e._v(" "),i("li",[e._v("Visible：至少有 1 像素进入屏幕")])]),e._v(" "),i("p",[i("strong",[e._v("ASRangeTuningParameters")])]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("typedef struct {\n\tCGFloat leadingBufferScreenfuls;\n  CGFloat trailingBufferScreenfuls;\n} ASRangeTuningParameters;\n")])])]),i("p",[i("img",{attrs:{src:t(313),alt:""}})]),e._v(" "),i("p",[e._v("ASRangeTuningParameters 定义了各个区域大小，一般来说即将进入的区域比离开的区域要大一些")]),e._v(" "),i("p",[i("strong",[e._v("Interface State Callbacks")])]),e._v(" "),i("p",[e._v("通过以下可以在相关的状态中进行不同的操作：")]),e._v(" "),i("ul",[i("li",[i("p",[e._v("Visible Range :")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("-didEnterVisibleState\n-didExitVisibleState\n")])])])]),e._v(" "),i("li",[i("p",[e._v("Display Range")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("-didEnterDisplayState\n-didExitDisplayState\n")])])])]),e._v(" "),i("li",[i("p",[e._v("Preload Range")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v("-didEnterPreloadState\n-didExitPreloadState\n")])])])])])])}],v=t(0),o=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},i,!1,null,null,null);a.default=o.exports}}]);