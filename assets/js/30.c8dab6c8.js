(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{219:function(t,i,e){"use strict";e.r(i);var _=e(0),s=Object(_.a)({},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),e("blockquote",[e("p",[t._v("GIT自学网站推荐: "),e("a",{attrs:{href:"https://backlog.com/git-tutorial/cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://backlog.com/git-tutorial/cn/"),e("OutboundLink")],1)])]),t._v(" "),e("hr"),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),e("ul",[t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),e("li",[e("p",[t._v("Git忽略提交规则 - .gitignore配置")]),t._v(" "),e("ul",[e("li",[t._v("别看了, 你想要的都在这"),e("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("企业开发专用链接"),e("OutboundLink")],1)])])])]),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),e("p",[t._v("7.利用SSH Key操作GitHub")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47)])},[function(){var t=this.$createElement,i=this._self._c||t;return i("h1",{attrs:{id:"git版本控制"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git版本控制","aria-hidden":"true"}},[this._v("#")]),this._v(" Git版本控制")])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"版本控制的起源"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#版本控制的起源","aria-hidden":"true"}},[this._v("#")]),this._v(" 版本控制的起源")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[t._v("现在的软件项目通常是由一个研发小组共同分析、设计、编码、维护以及测试的")]),t._v(" "),e("li",[t._v("针对团队开发需要解决以下问题：\n"),e("ul",[e("li",[t._v("备份多个版本，费空间，费时间")]),t._v(" "),e("li",[t._v("难于恢复至以前正确版本")]),t._v(" "),e("li",[t._v("容易引发BUG")]),t._v(" "),e("li",[t._v("解决代码冲突困难")]),t._v(" "),e("li",[t._v("代码管理混乱")]),t._v(" "),e("li",[t._v("难于追溯问题代码的修改人和修改时间")]),t._v(" "),e("li",[t._v("无法进行权限控制")]),t._v(" "),e("li",[t._v("项目版本发布困难")])])]),t._v(" "),e("li",[t._v("源代码管理工具就是为了解决上述问题应运而生的")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"版本控制-revision-control"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#版本控制-revision-control","aria-hidden":"true"}},[this._v("#")]),this._v(" 版本控制(Revision Control)")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("p",[t._v("是维护工程蓝图的标准做法，能追踪工程蓝图从诞生一直到定案的过程。是一种记录若干文件内容变化，以便将来查阅特定版本修订情况的系统")]),t._v(" "),e("ul",[e("li",[t._v("如果是开发团队中的一员，使用版本控制是强制性的！")]),t._v(" "),e("li",[t._v("如果是单人开发，也强烈建议现在就开始使用版本控制!")])])]),t._v(" "),e("li",[e("p",[t._v("使用版本控制可以：")]),t._v(" "),e("ul",[e("li",[t._v("不会对现有工作造成任何损害")]),t._v(" "),e("li",[t._v("不会增加工作量")]),t._v(" "),e("li",[t._v("添加新的功能拓展时，会变得更加容易")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"常见版本控制工具"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#常见版本控制工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见版本控制工具")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("p",[t._v("CVS 开启版本控制之门")]),t._v(" "),e("ul",[e("li",[t._v("CVS 1990年诞生，远古时代的主流源代码管理工具")])])]),t._v(" "),e("li",[e("p",[t._v("SVN 集中式版本控制之王者")]),t._v(" "),e("ul",[e("li",[t._v("SVN:又称subversion，是CVS的接班人，是一款"),e("code",[t._v("集中式")]),t._v("源代码管理工具。曾经是绝大多数开源软件的代码管理工具(google code)，前几年在国内软件企业使用最为普遍")])])]),t._v(" "),e("li",[e("p",[t._v("GIT 分布式版本控制之伟大作品")]),t._v(" "),e("ul",[e("li",[t._v("GIT:一款"),e("code",[t._v("分布式")]),t._v("源代码管理工具，目前国内企业几乎都已经完成了从SVN到GIT的转换")])])]),t._v(" "),e("li",[e("p",[t._v("集中式源代码管理")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-0038292fc7901b3c.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("分布式源代码管理")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-b32b9194c125ecbf.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("分布式和集中式的最大区别在于：")]),t._v(" "),e("ul",[e("li",[t._v("在集中式下, 开发者只能将代码提交到服务器, 在分布式下, 开发者可以本地提交")]),t._v(" "),e("li",[t._v("在集中式下, 只有远程服务器上有代码数据库, 在分布式下, 每个开发者机器上都有一个代码数据库")])])]),t._v(" "),e("li",[e("p",[t._v("SVN(集中式)")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-04a8ecee2ca8e5c4.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("GIT(分布式)")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-6a9d0974b77621bc.png",alt:""}})])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git和svn的简单对比"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git和svn的简单对比","aria-hidden":"true"}},[this._v("#")]),this._v(" Git和SVN的简单对比")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[t._v("速度\n"),e("ul",[e("li",[t._v("在很多情况下，git的速度远远比SVN快")])])]),t._v(" "),e("li",[t._v("结构\n"),e("ul",[e("li",[t._v("SVN是集中式管理，git是分布式管理")])])]),t._v(" "),e("li",[t._v("其他\n"),e("ul",[e("li",[t._v("SVN使用分支比较笨拙，git可以轻松拥有无限个分支")]),t._v(" "),e("li",[t._v("SVN必须联网才能正常工作，git支持本地版本控制工作")]),t._v(" "),e("li",[t._v("旧版本的SVN会在每一个目录置放一个.svn，git只会在根目录拥有一个.git")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git简介","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT简介")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[t._v("GIT是一款自由和开源的"),e("code",[t._v("分布式")]),t._v("版本控制系统，用于"),e("code",[t._v("敏捷高效")]),t._v("地处理任何或小或大的项目")]),t._v(" "),e("li",[t._v("在世界上所有的分布式版本控制工具中，git是最快、最简单、最流行的")]),t._v(" "),e("li",[t._v("是Linux之父李纳斯的第二个伟大作品\n"),e("ul",[e("li",[t._v("2005年由于BitKeeper软件公司对Linux社区停止了免费使用权。")]),t._v(" "),e("li",[t._v("Linus为了辅助Linux内核的开发(管理源代码),迫不得己自己开发了一个分布式版本控制工具，从而Git诞生了")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git工作原理"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git工作原理","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT工作原理")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("p",[t._v("如果想学好GIT必须先了解GIT的工作原理")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("工作区(Working Directory):")]),t._v(" 仓库文件夹里面, 除了"),e("code",[t._v(".git目录")]),t._v("以外的内容")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("版本库(Repository):")]),t._v(".git目录, 用于存储记录版本信息版本库中的"),e("strong",[t._v("暂缓区(staga):"),e("strong",[t._v("版本库中的")]),t._v("分支(master):")]),t._v(" git自动创建的第一个分支版本库中的**HEAD指针:**用于指向当前分支")])]),t._v(" "),e("li",[e("p",[t._v("git add和git commit命名作用")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("git add: 把文件修改添加到暂缓区")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-143ae6cdb18d3212.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("git commit: 把暂缓区的所有内容提交到当前HEAD指针指向的分支")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-55c339632d9e540f.png",alt:""}})])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git使用环境"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git使用环境","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT使用环境")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[t._v("多人开发时需要一个"),e("code",[t._v("共享版本库")]),t._v(", 单人开发初始化一个"),e("code",[t._v("本地库")]),t._v("即可")]),t._v(" "),e("li",[t._v("共享版本库的形式:\n"),e("ul",[e("li",[t._v("本地共享库: 文件夹/U盘/硬盘")]),t._v(" "),e("li",[t._v("远程共享库: 自己搭建git服务器/托管到第三方平台(github/oschina等)")])])]),t._v(" "),e("li",[t._v("无论是单人开发还是多人开发, 客户端都可以使用命令行或者图形化界面使用git")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git命令-个人开发"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git命令-个人开发","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT命令-个人开发")])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[i("code",[this._v("git help")]),this._v(" ：git指令帮助手册")]),this._v(" "),i("ul",[i("li",[this._v("查看其他指令的做法：git help 其他指令")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[i("code",[this._v("git init")]),this._v("  : 仓库初始化(个人仓库)")]),this._v(" "),i("ul",[i("li",[this._v("仓库文件目录")])]),this._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[this._v("HEAD: 指向当前分支的一个提交\ndescription:  项目的描述信息\nconfig:   项目的配置信息\ninfo/:    里面有一个exclude文件，指定本项目要忽略的文件\nobjects/: Git对象库(commit/tree/blob/tag)\nrefs/:    标识每个分支指向哪个提交\nhooks/:   默认的hook脚本\n")])])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[t._v("GIT设置配置信息")]),t._v(" "),e("ul",[e("li",[t._v("配置用户名："),e("code",[t._v('git config user.name "用户名"')]),t._v("（用于跟踪修改记录）")]),t._v(" "),e("li",[t._v("配置邮箱："),e("code",[t._v('git config user.email "邮箱"')]),t._v("（用于多人开发间的沟通）")]),t._v(" "),e("li",[e("code",[t._v("git config -l")]),t._v(" :   查看配置信息")]),t._v(" "),e("li",[e("code",[t._v("git config -e")]),t._v(" :   编辑配置信息")])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git status")]),t._v(" ：查文件的状态")]),t._v(" "),e("ul",[e("li",[t._v("查看某个文件的状态："),e("code",[t._v("git status 文件名")])]),t._v(" "),e("li",[t._v("查看当前路径所有文件的状态："),e("code",[t._v("git status")])])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git add .")]),t._v(" ：将工作区的文件保存到暂缓区")]),t._v(" "),e("ul",[e("li",[t._v("保存某个文件到暂缓区："),e("code",[t._v("git add 文件名")])]),t._v(" "),e("li",[t._v("保存当前路径的所有文件到暂缓区："),e("code",[t._v("git add .")]),t._v("（注意，最后是一个点 . ）")])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git commit")]),t._v("：将暂缓区的文件提交到当前分支")]),t._v(" "),e("ul",[e("li",[t._v("提交某个文件到分支："),e("code",[t._v("git commit -m ”注释” 文件名")])]),t._v(" "),e("li",[t._v("保存当前路径的所有文件到分支："),e("code",[t._v("git commit -m ”注释”")])])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git log")]),t._v(" ：查看文件的修改日志")]),t._v(" "),e("ul",[e("li",[t._v("查看某个文件的修改日志："),e("code",[t._v("git log 文件名")])]),t._v(" "),e("li",[t._v("查看当前路径所有文件的修改日志："),e("code",[t._v("git log")])]),t._v(" "),e("li",[t._v("用一行的方式查看简单的日志信息："),e("code",[t._v("git log ––pretty=oneline")])]),t._v(" "),e("li",[t._v("查看最近的N次修改："),e("code",[t._v("git log –N")]),t._v("（N是一个整数）")])])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git diff")]),t._v(" ：查看文件最新改动的地方")]),t._v(" "),e("ul",[e("li",[t._v("查看某个文件的最新改动的地方："),e("code",[t._v("git diff 文件名")])]),t._v(" "),e("li",[t._v("查看当前路径所有文件最新改动的地方："),e("code",[t._v("git diff")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[i("code",[this._v("git reflog")]),this._v(" ：查看分支引用记录（能够查看所有的版本号）")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("li",[i("p",[i("code",[this._v("git rm")]),this._v("：删除文件（删完之后要进行commit操作，才能同步到版本库）")])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("li",[e("p",[e("code",[t._v("git reset")]),t._v("：版本回退（建议加上––hard参数，git支持无限次后悔）")]),t._v(" "),e("ul",[e("li",[t._v("回退到上一个版本："),e("code",[t._v("git reset ––hard HEAD^")])]),t._v(" "),e("li",[t._v("回退到上上一个版本："),e("code",[t._v("git reset ––hard HEAD^^")])]),t._v(" "),e("li",[t._v("回退到上N个版本："),e("code",[t._v("git reset ––hard HEAD~N（N是一个整数）")])]),t._v(" "),e("li",[t._v("回退到任意一个版本："),e("code",[t._v("git reset ––hard 版本号（版本号用7位即可）")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[this._v("#               表示此为注释,将被Git忽略\n*.a             表示忽略所有 .a 结尾的文件\n!lib.a          表示但lib.a除外\n/TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO\nbuild/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；\ndoc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt\n \nbin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件\n/bin:           表示忽略根目录下的bin文件\n/*.c:           表示忽略cat.c，不忽略 build/cat.c\ndebug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj\n**/foo:         表示忽略/foo,a/foo,a/b/foo等\na/**/b:         表示忽略a/b, a/x/b,a/x/y/b等\n!/bin/run.sh    表示不忽略bin目录下的run.sh文件\n*.log:          表示忽略所有 .log 文件\nconfig.php:     表示忽略当前路径的 config.php 文件\n \n/mtk/           表示过滤整个文件夹\n*.zip           表示过滤所有.zip文件\n/mtk/do.c       表示过滤某个具体文件\n \n被过滤掉的文件就不会出现在git仓库中（gitlab或github）了，当然本地库中还有，只是push的时候不会上传。\n \n需要注意的是，gitignore还可以指定要将哪些文件添加到版本管理中，如下：\n!*.zip\n!/mtk/one.txt\n \n唯一的区别就是规则开头多了一个感叹号，Git会将满足这类规则的文件添加到版本管理中。为什么要有两种规则呢？\n想象一个场景：假如我们只需要管理/mtk/目录中的one.txt文件，这个目录中的其他文件都不需要管理，那么.gitignore规则应写为：：\n/mtk/*\n!/mtk/one.txt\n \n假设我们只有过滤规则，而没有添加规则，那么我们就需要把/mtk/目录下除了one.txt以外的所有文件都写出来！\n注意上面的/mtk/*不能写为/mtk/，否则父目录被前面的规则排除掉了，one.txt文件虽然加了!过滤规则，也不会生效！\n \n----------------------------------------------------------------------------------\n还有一些规则如下：\nfd1/*\n说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；\n \n/fd1/*\n说明：忽略根目录下的 /fd1/ 目录的全部内容；\n \n/*\n!.gitignore\n!/fw/ \n/fw/*\n!/fw/bin/\n!/fw/sf/\n说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录；注意要先对bin/的父目录使用!规则，使其不被排除。\n")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git命令-团队开发"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git命令-团队开发","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT命令-团队开发")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("code",[t._v("git init --bare")]),t._v("  : 仓库初始化(共享仓库)注意: 不要直接在共享仓库中编写代码")]),t._v(" "),e("li",[e("code",[t._v("git clone")]),t._v("：下载远程仓库到本地下载远程仓库到当前路径：git clone 仓库的URL下载远程仓库到特定路径：git clone 仓库的URL 存放仓库的路径")]),t._v(" "),e("li",[e("code",[t._v("git pull")]),t._v("：下载远程仓库的最新信息到本地仓库")]),t._v(" "),e("li",[e("code",[t._v("git push")]),t._v("：将本地的仓库信息推送到远程仓库提交时如果远程仓库有其它人提交的最新代码, 必须先pull, 再提交")]),t._v(" "),e("li",[t._v("冲突解决:\n"),e("ul",[e("li",[t._v("当多个人同时修改了同一个文件时, 后提交的需要先从服务器pull代码到问题, 手动解决完冲突之后再push到远程服务器")])])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[this._v("<<<<<<< HEAD\n    你本地的新增的代码\n=======\n    服务器上和你冲突的代码\n>>>>>>> e9609de28b65bf97539f94c6458cdebdf2711c9f\n")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"git经典协同模型"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git经典协同模型","aria-hidden":"true"}},[this._v("#")]),this._v(" GIT经典协同模型")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[t._v("中心仓库：包含master和develop两个分支")]),t._v(" "),e("li",[t._v("分支分类\n"),e("ul",[e("li",[t._v("主要分支：master和develop分支")]),t._v(" "),e("li",[t._v("支持性分支：特性分支，发布分支，热补丁分支")])])]),t._v(" "),e("li",[t._v("对于商业级项目，真正开发过程中都是基于develop分支进行的，develop分支是开发主线！")]),t._v(" "),e("li",[t._v("master分支中，只存放相对稳定的分支，例如：0.1版本, 0.2版本")]),t._v(" "),e("li",[t._v("在实际产品开发中，需要“规划版本”，例如：将100个功能规划到5个不同的版本上")]),t._v(" "),e("li",[t._v("发现bug，要基于“上一个最稳定的版本”进行修复，这是热补丁分支存在的意义！")]),t._v(" "),e("li",[t._v("理解清楚版本管理分支的特性，是迭代式开发的重要基础！")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-96602fa3be91e763.png",alt:""}})])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[i("code",[this._v("git branch")]),this._v(" : 查看所有分支")]),this._v(" "),i("li",[i("code",[this._v("git branch 分支名称")]),this._v(" : 查看所有分支")])])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("p",[t._v("新创建的分支中的内容和master分支中的内容一样")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git checkout 分支名称")]),t._v(" : 切换到指定分支")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git merge 分支名称")]),t._v(" : 合并分支将当前所在分支和指定名称分支进行合并")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git branch -d 分支名称")]),t._v(" : 删除指定分支")])]),t._v(" "),e("li",[e("p",[t._v("不能在当前分支中删除自己")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"使用git我们应该"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用git我们应该","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用GIT我们应该")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("经常更新：降低冲突的可能性")]),this._v(" "),i("li",[this._v("提交前需在本机测试通过：降低将问题代码传到版本库")]),this._v(" "),i("li",[this._v("提交时一定写备注：方便其他员工查看和自己以后回顾")]),this._v(" "),i("li",[this._v("对于不需要提交的文件不要提交到版本库")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("blockquote",[i("p",[this._v("提示:")]),this._v(" "),i("ul",[i("li",[this._v("每次提交之前先更新")]),this._v(" "),i("li",[this._v("每天下班前提交当天编译通过的代码")]),this._v(" "),i("li",[this._v("每天上班第一件事情更新前一天的代码")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"github使用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#github使用","aria-hidden":"true"}},[this._v("#")]),this._v(" GITHUB使用")])},function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ul",[e("li",[e("p",[t._v("1.注册GitHub账号")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-48e94a59e7c767ae.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("2.登录GitHub")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-97283b621f1aa762.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("3.点击你的仓库")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-f25a114a2f4e2169.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("4.创建一个新的仓库")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-12af8262b377bf13.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("5.新建的仓库可以下载, 但是提交需要账号密码")])]),t._v(" "),e("li",[e("p",[t._v("6.配置SSH Key")]),t._v(" "),e("ul",[e("li",[t._v("6.1打开git 命令行工具")]),t._v(" "),e("li",[t._v("输入指令"),e("code",[t._v('ssh-keygen -t rsa -b 4096 -C "your_email@example.com"')])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-cae44742691c8689.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("6.2复制刚才生成的公钥.")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-7642e9233046be82.png",alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-de4e0d7d4a1a5c9d.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("6.3将生成好的SSH Key 添加到GitHub")])])])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-05b20bf92a0589e0.png",alt:""}})])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-a30df50503d30337.png",alt:""}})])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-5e7e96e09c110ef1.png",alt:""}})])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("6.4测试是否配置成功 "),i("code",[this._v("ssh -T git@github.com")])]),this._v(" "),i("li",[this._v("如果后面出现 : Hi ****! You've successfully authenticated, but GitHub does not provide shell access.证明成功")])])},function(){var t=this.$createElement,i=this._self._c||t;return i("p",[i("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/647982-3cafc31917484655.png",alt:""}})])},function(){var t=this.$createElement,i=this._self._c||t;return i("h2",{attrs:{id:"oschina使用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#oschina使用","aria-hidden":"true"}},[this._v("#")]),this._v(" oschina使用")])},function(){var t=this.$createElement,i=this._self._c||t;return i("ul",[i("li",[this._v("和GitHub一样~么么哒")])])}],!1,null,null,null);i.default=s.exports}}]);