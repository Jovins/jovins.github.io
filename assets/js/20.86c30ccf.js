(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{166:function(t,e,s){t.exports=s.p+"assets/img/NestedScrolling-00.4046a746.png"},319:function(t,e,s){t.exports=s.p+"assets/img/ASDipslayNode.fe81827e.png"},320:function(t,e,s){t.exports=s.p+"assets/img/texture-concept-01.f6e69902.png"},321:function(t,e,s){t.exports=s.p+"assets/img/texture-concept-02.db23357b.png"},322:function(t,e,s){t.exports=s.p+"assets/img/texture-concept-03.8dda3668.png"},486:function(t,e,s){"use strict";s.r(e);var r=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"texture-基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#texture-基本概念","aria-hidden":"true"}},[this._v("#")]),this._v(" Texture 基本概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(166),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"开始使用-texture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始使用-texture","aria-hidden":"true"}},[this._v("#")]),this._v(" 开始使用 Texture")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Texture 的基本单位是 "),s("code",[t._v("Node")]),t._v("，"),s("code",[t._v("ASDisplayNode")]),t._v(" 是 "),s("code",[t._v("UIView")]),t._v(" 和 "),s("code",[t._v("CALayer")]),t._v(" 的抽象，它与 "),s("code",[t._v("UIKit")]),t._v(" 的不同在于：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Node")]),this._v(" 可以异步绘制，且线程安全，你可以在在异步线程中进行实例化和配置它们的层级结构。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Texture")]),this._v(" 可以让你将图像解码、文本渲染和其他消耗性能的 UI 操作从主线程剥离，以保证主线程可以流畅的响应用户的交互，"),e("code",[this._v("Texture")]),this._v(" 还有其他的使用窍门，我们稍后会讲到。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"节点-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点-node","aria-hidden":"true"}},[this._v("#")]),this._v(" 节点/Node")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("Node")]),t._v(" 的用法跟 "),s("code",[t._v("UIView")]),t._v(" 类似，且 "),s("code",[t._v("Node")]),t._v(" 提供了 "),s("code",[t._v("UIView")]),t._v(" 和 "),s("code",[t._v("CALayer")]),t._v(" 属性。\nTexture 提供了丰富的 Node 子类 ，用于取代 UIKit 组建。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("ASDipslayNode -> UIView")]),t._v(" "),s("li",[t._v("ASCellNode -> UITableViewCell/UICollectionViewCell")]),t._v(" "),s("li",[t._v("ASScrollNode -> UIScrollView")]),t._v(" "),s("li",[t._v("ASEditableTextNode -> UITextView")]),t._v(" "),s("li",[t._v("ASTextNode, ASTextNode2 -> UILabel")]),t._v(" "),s("li",[t._v("ASImageNode, ASNetworkImageNode, ASMultiplexImageNode -> UIImageView")]),t._v(" "),s("li",[t._v("ASVideoNode -> AVPlayerLayer")]),t._v(" "),s("li",[t._v("ASVideoPlayerNode -> UIMoviePlayer")]),t._v(" "),s("li",[t._v("ASControlNode -> UIControl")]),t._v(" "),s("li",[t._v("ASButtonNode -> UIButton")]),t._v(" "),s("li",[t._v("ASMapNode -> MKMapView")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(319),alt:"ASDipslayNode"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("如果你会使用 "),s("code",[t._v("UIView")]),t._v("，那么你就已经知道如何使用 "),s("code",[t._v("Node")]),t._v(" 了，"),s("code",[t._v("UIView")]),t._v(" 中绝大部分的方法 "),s("code",[t._v("Node")]),t._v(" 都有映射，并且 "),s("code",[t._v("UIView")]),t._v(" 和 "),s("code",[t._v("CALayer")]),t._v(" 大多数的属性，也是可以使用的。当属性和方法的命名有差异时，例如 "),s("code",[t._v(".clipsToBounds")]),t._v(" 和 "),s("code",[t._v(".masksToBounds")]),t._v("，"),s("code",[t._v("Node")]),t._v(" 默认使用 "),s("code",[t._v("UIView")]),t._v(" 的命名，唯一例外的是 "),s("code",[t._v("Node")]),t._v(" 使用 "),s("code",[t._v(".position")]),t._v(" 替代了 "),s("code",[t._v(".center")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当然，你也可以通过 "),e("code",[this._v("node.view")]),this._v(" 或 "),e("code",[this._v("node.layer")]),this._v(" 直接调用原生属性和方法，但要确保它会在主线程上执行！")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Texture 已经提供了多种多样的 "),e("code",[this._v("Node")]),this._v(" 来替换你习惯使用的大部分 UIKit 组件，现在你已经可以完全通过 Texture 开发大规模的 App 。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("ASCollectionNode -> UICollectionView")]),t._v(" "),s("li",[t._v("ASPagerNode -> UIPageViewController")]),t._v(" "),s("li",[t._v("ASTableNode -> UITableView")]),t._v(" "),s("li",[t._v("ASViewController -> UIViewController")]),t._v(" "),s("li",[t._v("ASNavigationController -> UINavigationController")]),t._v(" "),s("li",[t._v("ASTabBarController -> UITabBarController")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当你将 Texture 集成到一个项目中时，一个常见的错误是将 "),e("code",[this._v("Node")]),this._v(" 直接添加到已有的视图中，这样做的结果是你的节点在渲染时会闪烁。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"布局引擎-layout-engine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#布局引擎-layout-engine","aria-hidden":"true"}},[this._v("#")]),this._v(" 布局引擎/Layout Engine")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Texture 的布局非常强大，相对于传统的 Frame，AutoLayout 等方式而言比较独特，但对前端工作者并不陌生，Texture 的布局基于 CSS FlexBox。它提供了指定自定义节点的大小和其子节点布局的声明方式，当所有的节点同时被渲染时，通过为每个节点提供的 "),e("code",[this._v("ASLayoutSpec")]),this._v(" 异步计算 size 和布局。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("高级开发者功能")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("集成 Texture")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源","aria-hidden":"true"}},[this._v("#")]),this._v(" 资源")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("示例")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("一个无限滚动的 Home Feed，演示 Texture 的平滑滚动性能；")]),this._v(" "),e("li",[this._v("一个相当庞大的代码库，用于演示使用 Texture 设计 App 可以减少多少代码；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("FlexBox 布局学习")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安装-texture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-texture","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装 Texture")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-objective-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("#import <AsyncDisplayKit/AsyncDisplayKit.h>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("CocoaPods")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("target 'MyApp' do\n    pod \"Texture\"\nend\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pod install\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pod update Texture\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("不要忘记使用 "),e("code",[this._v(".xcworkspace")]),this._v(" 打开，而不是 "),e("code",[this._v(".xcodeproj")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Carthage")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("使用迦太基需要创建一个Cartfile 列表，然后执行 "),e("code",[this._v("carthage update")]),this._v("，将依赖项下载到 "),e("code",[this._v("Cathage/Checkouts")]),this._v(" 文件夹中，并将它们构建到位于 "),e("code",[this._v("Carthage/Build")]),this._v(" 文件夹中，开发人员须手工集成到项目中。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('github "texturegroup/texture"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('github "texturegroup/texture" "master"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("carthage update\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("打开 Xcode，将所需的框架拖到 "),e("code",[this._v("TARGETS - General -Linked Frameworks and Libraries")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Carthage(light)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("PINCache 是 PINRemoteImage 一个嵌套的依赖。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"升级到-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级到-2-0","aria-hidden":"true"}},[this._v("#")]),this._v(" 升级到 2.0")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("发布说明")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("获取正式候选版本")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pod 'Texture', '>= 2.0'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("pod repo update\npod update Texture\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("测试 2.0")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("在 project settings 中禁用 deprecation warnings；")]),t._v(" "),s("li",[t._v("在项目的 build settings 中禁用 warnings as errors；")]),t._v(" "),s("li",[t._v("在 Texture 中禁用 deprecation warnings，这需要你将 "),s("code",[t._v("ASBaseDefines.h")]),t._v(" 中的第 74 行更改为 "),s("code",[t._v("# define ASDISPLAYNODE_WARN_DEPRECATED 0")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ASStackLayoutSpec的.alignItems")]),this._v(" 属性默认值更改为 "),e("code",[this._v("ASStackLayoutAlignItemsStretch")]),this._v(" 而不是 "),e("code",[this._v("ASStackLayoutAlignItemsStart")]),this._v("，这可能会在 UI 中造成失真。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"智能预加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#智能预加载","aria-hidden":"true"}},[this._v("#")]),this._v(" 智能预加载")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("正如在开始使用 Texture 这节中讲的那样，在一个节点容器的上下文之外使用一个节点有一些弊端的。这是因为所有的节点都具有当前界面状态的概念，这个状态命名为 "),e("code",[this._v("interfaceState")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("interfaceState")]),this._v(" 这个属性是不断更新的，它的更新由 "),e("code",[this._v("ASRangeController")]),this._v(" 所控制，"),e("code",[this._v("ASRangeController")]),this._v(" 又由所有的节点容器在内部创建和维护。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在容器外部使用的节点不会被 "),e("code",[this._v("ASRangeController")]),this._v(" 更新状态，因此这有时会导致闪烁，原因是这些容器外的节点因为状态的错误，在节点被渲染到屏幕后又进行了一次渲染。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Interface State Ranges")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(320),alt:""}}),this._v(")")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("界面范围")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Preload")]),t._v(" "),s("td",[t._v("节点还不可见，这时节点收集外部源，外部源可能是 API 或者本地磁盘。")])]),t._v(" "),s("tr",[s("td",[t._v("Display")]),t._v(" "),s("td",[t._v("节点开始渲染，包括文本的光栅化已经图像解码等。")])]),t._v(" "),s("tr",[s("td",[t._v("Visible")]),t._v(" "),s("td",[t._v("节点可见，在屏幕上至少拥有一个像素。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("ASRangeTuningParameters")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(321),alt:"img"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Interface State Callbacks")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TZYNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASDisplayNode")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didEnterPreloadState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"进入数据加载范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didExitPreloadState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"离开数据加载范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didEnterDisplayState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"进入渲染范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didExitDisplayState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"离开渲染范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didEnterVisibleState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"进入可见范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("didExitVisibleState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"离开可见范围"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"节点容器-node-containers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点容器-node-containers","aria-hidden":"true"}},[this._v("#")]),this._v(" 节点容器/Node Containers")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("在节点容器中使用节点")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("节点容器")]),t._v(" "),s("th",[t._v("等价于 UIKit")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("ASCollectionNode")]),t._v(" "),s("td",[t._v("代替 UICollectionView")])]),t._v(" "),s("tr",[s("td",[t._v("ASPagerNode")]),t._v(" "),s("td",[t._v("代替UIPageViewController")])]),t._v(" "),s("tr",[s("td",[t._v("ASTableNode")]),t._v(" "),s("td",[t._v("代替UITableView")])]),t._v(" "),s("tr",[s("td",[t._v("ASViewController")]),t._v(" "),s("td",[t._v("代替UIViewController")])]),t._v(" "),s("tr",[s("td",[t._v("ASNavigationController")]),t._v(" "),s("td",[t._v("代替UINavigationController，实现 ASVisibility 协议。")])]),t._v(" "),s("tr",[s("td",[t._v("ASTabBarController")]),t._v(" "),s("td",[t._v("代替UITabBarController，实现 ASVisibility 协议。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("为什么使用节点容器")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"节点子类-node-subclasses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点子类-node-subclasses","aria-hidden":"true"}},[this._v("#")]),this._v(" 节点子类/Node Subclasses")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("节点")]),t._v(" "),s("th",[t._v("等价于 UIKit")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("ASDisplayNode")]),t._v(" "),s("td",[t._v("代替 UIView，所有的 Node 都继承自 ASDisplayNode。")])]),t._v(" "),s("tr",[s("td",[t._v("ASCellNode")]),t._v(" "),s("td",[t._v("代替 UITableViewCell＆UICollectionViewCell，需要和 ASTableNode，ASCollectionNode 和 ASPagerNode 共同使用。")])]),t._v(" "),s("tr",[s("td",[t._v("ASScrollNode")]),t._v(" "),s("td",[t._v("代替 UIScrollView，这个节点对于创建自定义的，包含其他节点的可滚动区域非常有用。")])]),t._v(" "),s("tr",[s("td",[t._v("ASEditableTextNode")]),t._v(" "),s("td",[t._v("代替 UITextView。")])]),t._v(" "),s("tr",[s("td",[t._v("ASTextNode")]),t._v(" "),s("td",[t._v("代替 UILabel。")])]),t._v(" "),s("tr",[s("td",[t._v("ASImageNode")]),t._v(" "),s("td",[t._v("代替 UIImage。")])]),t._v(" "),s("tr",[s("td",[t._v("ASNetworkImageNode")]),t._v(" "),s("td",[t._v("代替 UIImage。")])]),t._v(" "),s("tr",[s("td",[t._v("ASMultiplexImageNode")]),t._v(" "),s("td",[t._v("代替 UIImage。")])]),t._v(" "),s("tr",[s("td",[t._v("ASVideoNode")]),t._v(" "),s("td",[t._v("代替 AVPlayerLayer。")])]),t._v(" "),s("tr",[s("td",[t._v("ASVideoPlayerNode")]),t._v(" "),s("td",[t._v("代替 UIMoviePlayer。")])]),t._v(" "),s("tr",[s("td",[t._v("ASControlNode")]),t._v(" "),s("td",[t._v("代替 UIControl。")])]),t._v(" "),s("tr",[s("td",[t._v("ASButtonNode")]),t._v(" "),s("td",[t._v("代替 UIButton。")])]),t._v(" "),s("tr",[s("td",[t._v("ASMapNode")]),t._v(" "),s("td",[t._v("代替 MKMapView。")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("尽管与 UIKit 组件大致相当，但一般而言，Texture 节点提供了更高级的功能和便利。 例如，"),e("code",[this._v("ASNetworkImageNode")]),this._v(" 可以自动加载网络图片和进行缓存管理，甚至支持渐进式 JPEG 和动画 GIF。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("节点继承关系/Node Inheritance Hierarchy")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所有的 Texture 节点都继承自 "),e("code",[this._v("ASDisplayNode")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(322),alt:"Node层级"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("右侧的节点是 UIKit 元素的封装。 例如，"),s("code",[t._v("ASScrollNode")]),t._v(" 封装了一个 "),s("code",[t._v("UIScrollView")]),t._v("，而 "),s("code",[t._v("ASCollectionNode")]),t._v(" 封装了一个 "),s("code",[t._v("UICollectionView")]),t._v("。 "),s("code",[t._v("liveMapMode")]),t._v(" 中的 "),s("code",[t._v("ASMapNode")]),t._v(" 是 "),s("code",[t._v("UIMapView")]),t._v(" 的封装。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("liveMapMode 未在此节和之前章节出现，不清楚是否为笔误。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("创建子类时最重要的区别是你使用的是 "),e("code",[this._v("ASViewController")]),this._v(" 还是  "),e("code",[this._v("ASDisplayNode")]),this._v("，这听起来很明显，但是因为这其中有一些微妙的差异，所以记住这点还是相当重要的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("ASDisplayNode")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("虽然实例化节点与 "),e("code",[this._v("UIView")]),this._v(" 类似，但需要遵循一些原则，以确保你充分利用了它的能力，并确保节点按照预期的方式运行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-init")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在使用 "),e("code",[this._v("initNodeBlocks")]),this._v(" 时，这个方法会后台线程上被调用。但是，因为没有其他方法会在 "),e("code",[this._v("init")]),this._v(" 完成之前运行，所以这个方法不需要加锁。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("需要记住的最重要的一点是，"),s("code",[t._v("init")]),t._v(" 方法必须能够在任何队列上调用。最值得注意的是，你永远不应该在节点初始化方法中初始化任何 UIKit 对象，以及调用 "),s("code",[t._v("node.layer")]),t._v(" "),s("code",[t._v("node.view.x")]),t._v(" 等与"),s("code",[t._v("view")]),t._v(" 或 "),s("code",[t._v("layer")]),t._v(" 有关的操作，也不应该在这个方法中为节点添加手势，这些事件应该在 "),s("code",[t._v("didLoad")]),t._v(" 方法中进行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-didLoad")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("这个方法在概念上类似于 "),s("code",[t._v("UIViewController")]),t._v(" 的 "),s("code",[t._v("-viewDidLoad")]),t._v(" 方法，当后台视图初始化完成时，它会被调用一次，它保证会在主线程上被调用，是执行任何 UIKit 代码合适的地方，例如添加手势识，更改 "),s("code",[t._v("view")]),t._v(" 和 "),s("code",[t._v("layer")]),t._v("，初始化 UIKit 对象。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-layoutSpecThatFits:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("该方法定义了节点的布局，并在后台线程上进行了大量的计算。此方法是你声明、创建和修改 "),e("code",[this._v("ASLayoutSpec")]),this._v(" 布局描述对象的地方，该对象描述了节点的 size，以及其子节点的 size 和 position，是你放置大部分布局代码的地方。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ASLayoutSpec")]),this._v(" 对象直到在此方法中返回前是可变的。 在这之后，这个对象将不可改变，需要注意的是你不需要缓存 "),e("code",[this._v("ASLayoutSpec")]),this._v("  对象以备后用，我们建议你在必要时重新创建布局描述。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("由于它在后台线程上运行，因此你不能在这个方法中调用 "),e("code",[this._v("node.view")]),this._v(" 或 "),e("code",[this._v("node.layer")]),this._v(" 以及它们的属性。 此外，除非你明确知道自己在做什么，否则不要在此方法中创建其他节点。 另外，重写此方法并不一定需要调用 "),e("code",[this._v("super")]),this._v(" 方法。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-layout")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在此方法中调用 "),e("code",[this._v("super")]),this._v(" 将，会使用  "),e("code",[this._v("layoutSpec")]),this._v(" 对象计算布局，所有子节点都将计算其 size 和 position。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("-layout")]),t._v(" 在概念上类似于 "),s("code",[t._v("UIViewController")]),t._v(" 的 "),s("code",[t._v("-viewwilllayoutsubview")]),t._v("，这是一个更改 "),s("code",[t._v("hidden")]),t._v(" 属性、修改 "),s("code",[t._v("view")]),t._v(" 属性、设置背景颜色的好地方。你可以在 "),s("code",[t._v("-layoutspec:")]),t._v(" 方法中设定背景颜色，但这可能会存在时序问题。如果你需要使用原生的 "),s("code",[t._v("UIView")]),t._v("，可以在这里设置它们的 "),s("code",[t._v("frame")]),t._v("，不管怎样，你始终可以使用 "),s("code",[t._v("-initWithViewBlock:")]),t._v(" 创建节点，并在其他地方的后台线程中进行调整。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个方法在主线程上被调用，如果你使用的是 "),e("code",[this._v("ASLayoutSpec")]),this._v("，那么你不应该过多地依赖这个方法，因为在主线程上进行布局是非常可取的，需要这个方法的子类小于 1/10。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("使用 "),s("code",[t._v("-layout")]),t._v(" 的一个重要用途是你需要子节点的 size 是精确的。举例来说，当你希望一个 "),s("code",[t._v("collectionNode")]),t._v(" 可以铺面屏幕，这种情况不被 "),s("code",[t._v("ASLayoutSpec")]),t._v(" 很好的支持，此时最简单的做法是在这个方法中手动设定 "),s("code",[t._v("frame")]),t._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("subnode.frame = self.bounds\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("如果你希望在 "),e("code",[this._v("ASViewController")]),this._v(" 中得到相同的效果，那么你可以在 "),e("code",[this._v("-viewWillLayoutSubviews")]),this._v(" 中做同样的事情，不过如果你的节点通过 "),e("code",[this._v("initWithNode:")]),this._v(" 进行实例化，它会自动做到这一点。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"asviewcontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#asviewcontroller","aria-hidden":"true"}},[this._v("#")]),this._v(" ASViewController")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("ASViewController")]),t._v(" 是一个常规的 "),s("code",[t._v("UIViewController")]),t._v(" 子类，它具有管理节点的特殊功能。因为它是一个 "),s("code",[t._v("UIViewController")]),t._v(" 子类，所以所有的方法都在主线程上被调用，并且你应该在主线程上创建至少一个 "),s("code",[t._v("ASViewController")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-init")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("这个方法在 "),s("code",[t._v("ASViewController")]),t._v(" 的生命周期开始时被调用一次，与 "),s("code",[t._v("UIViewController")]),t._v(" 的初始化一样，你最好不要在这个方法中访问 "),s("code",[t._v("self.view")]),t._v(" 或  "),s("code",[t._v("self.node.view")]),t._v("，因为这样会强制创建 "),s("code",[t._v("view")]),t._v("。 这些操作可以在 "),s("code",[t._v("-viewDidLoad")]),t._v(" 中进行，"),s("code",[t._v("-viewDidLoad")]),t._v(" 可以执行任何 "),s("code",[t._v("view")]),t._v(" 的访问。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("ASViewController")]),t._v(" 指定的构造器是 "),s("code",[t._v("initWithNode:")]),t._v("，一个典型的构造器看起来就像下面的代码。请注意下面的代码，在调用 "),s("code",[t._v("super")]),t._v(" 之前，"),s("code",[t._v("ASViewController")]),t._v(" 的节点是如何被创建的，"),s("code",[t._v("ASViewController")]),t._v(" 管理节点类似于 "),s("code",[t._v("UIViewController")]),t._v(" 管理视图，但是它的初始化方式有所区别：")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-swift extra-class"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TZYVC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASViewController")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASDisplayNode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pagerNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ASPagerNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pagerNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        pagerNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        pagerNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coder aDecoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSCoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatalError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init(coder:) has not been implemented"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TZYVC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASPagerDataSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfPages")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" pagerNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASPagerNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TZYVC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ASPagerDelegate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-loadView")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("我们建议你不要使用这个方法，因为与 "),s("code",[t._v("-viewDidLoad")]),t._v(" 相比，它没有什么特别的优势，并且有一些缺点。 但是，只要不将 "),s("code",[t._v("self.view")]),t._v(" 属性设置为不同的值，它可以安全的使用。 它的 "),s("code",[t._v("super")]),t._v(" 方法会将其封装的 "),s("code",[t._v("UIViewController")]),t._v(" 的 "),s("code",[t._v("view")]),t._v(" 设置为 "),s("code",[t._v("ASViewController")]),t._v(" 的 "),s("code",[t._v("node.view")]),t._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-viewDidLoad")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("这个方法在 "),s("code",[t._v("-loadView")]),t._v(" 之后被执行，这是 "),s("code",[t._v("ASViewController")]),t._v(" 生命周期中，你可以访问 "),s("code",[t._v("node.view")]),t._v(" 最早的方法，你可以在这份方法中任意修改 "),s("code",[t._v("view")]),t._v(" 和 "),s("code",[t._v("layer")]),t._v(" 或添加手势，这个方法在其所属的生命周期中，只会执行一次。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所以布局代码不应该放在这个方法中，因为当界面重绘时，这里的代码不会被再次调用。"),e("code",[this._v("UIViewController")]),this._v(" 中这个方法也是同样的，在这种方法中放置布局代码是一种不太好的做法，即使你的布局不会因为交互发生变化。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-viewWillLayoutSubviews")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("这个方法会与节点的 "),e("code",[this._v("-layout")]),this._v(" 同时调用，它可能在 "),e("code",[this._v("ASViewController")]),this._v(" 的生命周期中被多次调用，当 "),e("code",[this._v("ASViewController")]),this._v(" 的节点的边界发生改变，如旋转、分割屏幕、键盘弹出等行为，或者当视图的层次结构发生变化，如子节点添加、删除或改变大小时，这个方法将被调用。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("-viewWillAppear: / -viewDidDisappear:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("viewWillAppear")]),this._v(" 在 "),e("code",[this._v("ASViewController")]),this._v(" 的节点出现在屏幕上之前被调用，这是节点从屏幕出现的最早时间，"),e("code",[this._v("viewDidDisappear")]),this._v(" 在控制器从视图层次结构中移除之后被调用，这是节点从屏幕消失的最早时机，这两个方法提供了一个很好的时机来启动或停止与控制器相关的动画，这也是一个保存和记录用户行为日志的好地方。")])}],n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/TextureGroup/Texture",target:"_blank",rel:"noopener noreferrer"}},[t._v("Texture"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"http://texturegroup.org/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Texture文档"),s("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("为了保持用户界面的流畅，你的 App 应该以 1/60 秒的帧率呈现， 这意味着主线程有 1/ 60 秒来处理一帧，也就是说，主线程需要在 16 毫秒内来执行所有的布局和绘图代码，而由于一些系统级别的开销，你的布局绘图代码一般执行超过 10 毫秒，就可能引起掉帧。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("ASDipslayNode示意图:")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),s("p",[t._v("##节点容器/Node Containers")]),t._v(" "),s("p",[t._v("推荐使用 Node Container 来包含 Nodes，Texture 提供以下 Node Containers：")]),t._v(" "),t._m(13),t._v(" "),s("p",[t._v("Node Containers 好处都有啥？\n智能预加载。这意味所有 Node 相关的布局计算，数据获取，解码和渲染都可以异步完成。")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("正确的做法是，你应该把节点添加到 Node 容器中，由 Node 容器负责管理这些节点，你可以把 Node 容器理解为 UIKit 和 ASDK 之间的桥梁。")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("p",[t._v("Texture 提供了在 UIKit 或 Foundation 中无法找到的各种高级开发功能，我们的开发人员发现，Texture 可以简化它们的架构，从而提高了开发效率。")]),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("如果你第一次使用 Texture，我们建议你看看 ASDKgram 示例，我们已经撰写了一个 Guide（即将推出），指导你如何一步一步将 Texture 集成到一个 App 中。")]),t._v(" "),s("p",[t._v("如果您遇到任何问题，请到我们的 GitHub 或 "),s("a",{attrs:{href:"http://texturegroup.org/docs/resources.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Slack"),s("OutboundLink")],1),t._v("寻求帮助。")]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("在 Slack 社区，和 Texture 的核心团队及 700+ Texture 开发者一起，实时 Debug、获取更新和进行交流，"),s("a",{attrs:{href:"http://texturegroup.org/slack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("点此注册"),s("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(20),t._v(" "),s("p",[t._v("查看我们的"),s("a",{attrs:{href:"https://github.com/texturegroup/texture/tree/master/examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例库"),s("OutboundLink")],1),t._v("，如果你第一次使用 Texture，我们建议你从 "),s("a",{attrs:{href:"https://github.com/texturegroup/texture/tree/master/examples/ASDKgram",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASDKgram"),s("OutboundLink")],1),t._v(" 开始，这个示例同时使用 UIKit 和 Texture 实现了照片Feed，你可以对比查看它们的区别，它的特点是：")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),s("p",[t._v("Texture 强大的布局系统基于CSS FlexBox 模型，这些网站对于学习 FlexBox 的基本知识非常有用。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://huynguyen.dev/froggy-asdk-layout/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASStackLayout Game"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://demos.scotch.io/visual-guide-to-css3-flexbox-flexbox-playground/demos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Guide to CSS3 Flexbox"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.flexboxpatterns.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FlexBox Patterns"),s("OutboundLink")],1)])]),t._v(" "),t._m(23),t._v(" "),s("p",[t._v("Texture 可以使用 CocoaPods 和 Carthage 安装，使用时不要忘记导入头文件：")]),t._v(" "),t._m(24),s("p",[t._v("如果你使用 Swift 开发，可以使用 Objective-C bridging header 进行桥接，如果你在安装中遇到任何问题，请在 GitHub 或 "),s("a",{attrs:{href:"https://link.juejin.im?target=http%3A%2F%2Ftexturegroup.org%2Fslack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Slack"),s("OutboundLink")],1),t._v(" 联系我们。")]),t._v(" "),t._m(25),t._v(" "),s("p",[t._v("使用 CocoaPods 安装，将以下内容添加到 Podfile：")]),t._v(" "),t._m(26),s("p",[t._v("完全退出 Xcode，打开终端，cd 到项目目录，执行下面的命令：")]),t._v(" "),t._m(27),s("p",[t._v("如果要更新 Texture，打开终端，cd 到项目目录，执行下面的命令：")]),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),s("p",[t._v("Texture 也可以通过迦太基安装，将以下内容添加到 Cartfile 以获取最新的 release 版本：")]),t._v(" "),t._m(32),s("p",[t._v("或者获取主干：")]),t._v(" "),t._m(33),s("p",[t._v("Texture 有自己的 Cartfile，指明了自己的依赖项，Texture 所需的依赖会自动安装，安装 Texture 依赖需要使用终端，在Carthage/Checkouts 目录下，执行：")]),t._v(" "),t._m(34),s("p",[t._v("确认 Texture、PINRemoteImage (3.0.0-beta.2)、PINCache 全部获取和构建，Texture 的 Cartfile 会自动处理这些依赖关系。")]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),s("p",[t._v("Texture 不支持 Carthage 更轻量的使用方式，你需要手动添加项目文件， 这是因为 Texture 的依赖 PINCache 还没有项目文件，")]),t._v(" "),t._m(37),t._v(" "),s("p",[t._v("如果没有 PINRemoteImage 和 PINCache，你将无法完整的使用 Texture 图像功能集。")]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),s("p",[t._v("请阅读 GitHub 上的官方发布说明。")]),t._v(" "),t._m(40),t._v(" "),s("p",[t._v("将以下内容添加到你的 pod 文件中：")]),t._v(" "),t._m(41),s("p",[t._v("在终端执行：")]),t._v(" "),t._m(42),t._m(43),t._v(" "),s("p",[t._v("一旦你更新到2.0，你会看到许多弃用警告。 别担心！这些警告是安全的，因为我们已经桥接了所有旧的 API，以便在迁移到新的 API 之前对 2.0 进行测试。\n如果你的 App 无法构建成功而不是仅显示警告，那么你的项目中可能出现错误，你有几个选择：")]),t._v(" "),t._m(44),t._v(" "),s("p",[t._v("当你的 App 构建成功并运行，你需要测试它以确保一切正常工作。 如果你发现任何问题，请尝试在该区域采用新的 API 并重新测试。")]),t._v(" "),s("p",[t._v("你可能会注意到一个关键的变化：")]),t._v(" "),t._m(45),t._v(" "),s("p",[t._v("如果还有其他问题，请提交 GitHub issue，我们很乐意帮助你！")]),t._v(" "),t._m(46),t._v(" "),s("p",[t._v("异步并发渲染和 FlexBox 布局已经非常强大，但 Texture 做到的不止于此，另外一个重要的层面是智能预加载的思想。")]),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),s("p",[t._v("当将节点添加到滚动或分页界面时，它们通常位于以下范围中的一个。这意味着当滚动视图被滚动时，它们的界面状态将随着它们的移动而更新。")]),t._v(" "),t._m(51),t._v(" "),s("p",[t._v("一个节点的所处的范围会是以下范围中的一个：")]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),s("p",[t._v("每个范围的大小以整个屏幕的尺寸作为参照， 默认的 size 在许多用例中都能很好地工作，你也可以通过在滚动节点上设置范围参数来调整它们。")]),t._v(" "),t._m(54),t._v(" "),s("p",[t._v("在上面的一个滚动集合的示例图片中，用户正在向下滚动。正如你所看到的，用户滚动方向区域（领先方向）要比用户离开方向区域（尾随方向）大得多。为了保持内存的最佳使用，当用户改变滚动方向时，两个区域会动态地交换。这使你不必考虑滚动方向的变化，只需关注领先方向和尾随方向的区域大小。")]),t._v(" "),s("p",[t._v("在这张图中，你可以看到智能的预加载是如何进行工作的，你可以看到在一个垂直的滚动容器中，虽然有些节点还未在设备屏幕中出现，但是它有一个范围控制器，屏幕外的节点处在 Preload 数据准备范围和 Display 渲染准备范围。")]),t._v(" "),t._m(55),t._v(" "),s("p",[t._v("当用户滚动时，节点在这三个范围中切换，并通过加载数据，渲染等作出适当的反应。你创建的节点子类可以通过实现相应的回调方法进入此机制。")]),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),t._v(" "),s("p",[t._v("我们强烈建议你在节点容器中使用 Texture 的节点， Texture 提供以下节点容器：")]),t._v(" "),t._m(59),t._v(" "),s("p",[t._v("示例代码和特定示例项目会在每个节点容器的文档中突出显示。")]),t._v(" "),t._m(60),t._v(" "),s("p",[t._v("节点容器自动管理其子节点实现智能预加载，这意味着节点的所有布局计算，数据读取，解码和渲染都将会异步完成，这就是为什么我们建议将节点放进节点容器中使用的原因。\n请注意，尽管你可以直接使用节点而不加入节点容器，但除非你添加其他回调，否则这个容器外的节点只会在屏幕出现时才会开始渲染。如同 UIKit 所做的那样，这可能导致性能下降和内容闪烁。")]),t._v(" "),t._m(61),t._v(" "),s("p",[t._v("在 UIKit 组件上使用节点的一个主要优点是，所有的节点都预先在主线程布局并绘制，这样主线程就可以立即响应用户交互事件，而无需先处理控件的渲染，Texture 提供以下节点：")]),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/texturegroup/texture/tree/master/examples/AsyncDisplayKitOverview",target:"_blank",rel:"noopener noreferrer"}},[t._v("AsyncDisplayKitOverview "),s("OutboundLink")],1),t._v("示例应用程序给出了上面列出的每个节点的基本实现。")]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),s("blockquote",[s("p",[t._v("原图使用花体英文，"),s("a",{attrs:{href:"http://texturegroup.org/static/images/node-hierarchy.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看原图"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),s("p",[t._v("##节点实例/Subclassing")]),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._m(87),t._v(" "),t._m(88),t._v(" "),t._m(89),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._m(94),t._v(" "),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._v(" "),s("p",[t._v("因为它不经常被调用，但是调用就代表页面需要重绘，因此所有的布局代码最好都放在这个方法中，即使是不直接依赖于 size 的 UI 代码也应放在这里。")]),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),s("p",[t._v("尽管这些方法可能被多次调用，并且是可以执行布局代码的，但是这两个方法不会在所有需要重绘的时候被调用，因此除了特定的动画设置之外，不应该用于执行核心的布局代码。")])])},r,!1,null,null,null);e.default=a.exports}}]);